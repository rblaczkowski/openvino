jobs:
- job: Lin
  # About 150% of total time
  timeoutInMinutes: 85
  pool:
    name: LIN_VMSS_VENV_F8S_WU2
  variables:
    system.debug: true
    WORKERS_NUMBER: 8
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    WORK_DIR: $(Pipeline.Workspace)/_w
    BUILD_DIR: $(WORK_DIR)/build
    BIN_DIR: $(REPO_DIR)/bin/intel64/$(BUILD_TYPE)
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
    lfs: false
    submodules: recursive
    path: openvino
  - script: |
      curl -H Metadata:true --noproxy "*" "http://169.254.169.254/metadata/instance?api-version=2019-06-01"
      whoami
      uname -a
      which python3
      python3 --version
      gcc --version
      lsb_release
      env
      cat /proc/cpuinfo
      cat /proc/meminfo
      vmstat -s
      df
    displayName: 'System properties'
  - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      rm -rf $(BUILD_DIR) ; mkdir $(BUILD_DIR)
    displayName: 'Make dir'
  - script: |
      sudo apt --assume-yes install libusb-1.0-0-dev
      python3 -m pip install -r ./inference-engine/ie_bridges/python/requirements.txt
      # For running Python API tests
      python3 -m pip install -r ./inference-engine/ie_bridges/python/src/requirements-dev.txt
    displayName: 'Install dependencies'
  - script: |
      wget https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-linux.zip
      unzip ninja-linux.zip
      sudo cp -v ninja /usr/local/bin/
    workingDirectory: $(WORK_DIR)
    displayName: 'Install Ninja'
  - task: CMake@1
    inputs:
      # CMake must get Python 3.x version by default
      cmakeArgs: -GNinja -DVERBOSE_BUILD=ON -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DENABLE_PYTHON=ON -DPYTHON_EXECUTABLE=/usr/bin/python3.6 -DENABLE_TESTS=ON $(REPO_DIR)
      workingDirectory: $(BUILD_DIR)
  - script: ninja
    workingDirectory: $(BUILD_DIR)
    displayName: 'Build Lin'
  - script: ls -alR $(REPO_DIR)/bin/
    displayName: 'List files'
  - script: $(BIN_DIR)/unit-test --gtest_print_time=1 --gtest_filter=-backend_api.config_unsupported:*IE_GPU*
    displayName: 'nGraph UT'
    continueOnError: false
  - script: $(BIN_DIR)/InferenceEngineUnitTests --gtest_print_time=1
    displayName: 'IE UT old'
    continueOnError: false
  - script: $(BIN_DIR)/ieUnitTests
    displayName: 'IE UT'
    continueOnError: false
  - script: $(BIN_DIR)/cpuUnitTests
    displayName: 'CPU UT'
    continueOnError: false
  - script: $(BIN_DIR)/gnaUnitTests
    displayName: 'GNA UT'
    continueOnError: false
  - script: $(BIN_DIR)/vpuUnitTests
    displayName: 'VPU UT'
    continueOnError: false
  - script: $(BIN_DIR)/ieFuncTests
    displayName: 'IE FuncTests'
    continueOnError: false
  - script: $(BIN_DIR)/cpuFuncTests --gtest_print_time=1
    displayName: 'CPU FuncTests'
    continueOnError: false
  - script: $(BIN_DIR)/MklDnnBehaviorTests
    displayName: 'MklDnnBehaviorTests'
    continueOnError: false
  - script: |
      git clone https://github.com/openvinotoolkit/testdata.git
      git clone https://github.com/google/gtest-parallel.git
    workingDirectory: $(WORK_DIR)
    displayName: 'Clone testdata & gtest-parallel'
  - script: |
      export DATA_PATH=$(WORK_DIR)/testdata
      export MODELS_PATH=$(WORK_DIR)/testdata
      python3 $(WORK_DIR)/gtest-parallel/gtest-parallel $(BIN_DIR)/MklDnnFunctionalTests --workers=$(WORKERS_NUMBER) --print_test_times --dump_json_test_results=MklDnnFunctionalTests.json -- --gtest_print_time=1
    workingDirectory: $(WORK_DIR)
    displayName: 'MklDnnFunctionalTests'
    continueOnError: false
  - script: |
      export DATA_PATH=$(WORK_DIR)/testdata
      export MODELS_PATH=$(WORK_DIR)/testdata
      $(BIN_DIR)/InferenceEngineCAPITests
    displayName: 'IE CAPITests'
    continueOnError: false
  - script: |
      export DATA_PATH=$(WORK_DIR)/testdata
      export MODELS_PATH=$(WORK_DIR)/testdata
      export LD_LIBRARY_PATH=$(BIN_DIR)/lib
      export PYTHONPATH=$(BIN_DIR)/lib/python_api/python3.6
      env
      cd $(REPO_DIR)/inference-engine/ie_bridges/python/tests
      pytest
    displayName: 'Python API Tests'
    continueOnError: false
    enabled: false

- job: Mac
  # About 200% of total time (perfomace of Mac hosts is unstable)
  timeoutInMinutes: 180
  pool:
    vmImage: 'macOS-10.15'
  variables:
    system.debug: true
    WORKERS_NUMBER: 3
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    WORK_DIR: $(Pipeline.Workspace)/_w
    BUILD_DIR: $(WORK_DIR)/build
    BIN_DIR: $(REPO_DIR)/bin/intel64/$(BUILD_TYPE)
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
    lfs: false
    submodules: recursive
    path: openvino
  - script: |
      whoami
      uname -a
      which python3
      python3 --version
      gcc --version
      xcrun --sdk macosx --show-sdk-version
      env
      sysctl -a
    displayName: 'System properties'
  - script: |
      rm -rf $(WORK_DIR) ; mkdir $(WORK_DIR)
      rm -rf $(BUILD_DIR) ; mkdir $(BUILD_DIR)
    displayName: 'Make dir'
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.7'
  - script: |
      brew install cython
      brew install automake
    displayName: 'Install dependencies'
  - script: brew install ninja
    displayName: 'Install Ninja'
  - script: |
      export PATH="/usr/local/opt/cython/bin:$PATH"
      export CC=gcc
      export CXX=g++
      # Disable errors with Ninja
      export CXXFLAGS="-Wno-error=unused-command-line-argument"
      export CFLAGS="-Wno-error=unused-command-line-argument"
      cmake -GNinja -DVERBOSE_BUILD=ON -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DENABLE_PYTHON=ON -DENABLE_TESTS=ON $(REPO_DIR)
    workingDirectory: $(BUILD_DIR)
    displayName: 'CMake'
  - script: ninja
    workingDirectory: $(BUILD_DIR)
    displayName: 'Build Mac'
  - script: ls -alR $(REPO_DIR)/bin/
    displayName: 'List files'
  - script: $(BIN_DIR)/unit-test --gtest_print_time=1 --gtest_filter=-backend_api.config_unsupported:*IE_GPU*:IE_CPU.onnx_model_sigmoid
    displayName: 'nGraph UT'
    continueOnError: false
  - script: $(BIN_DIR)/InferenceEngineUnitTests --gtest_print_time=1
    displayName: 'IE UT old'
    continueOnError: false
  - script: $(BIN_DIR)/ieUnitTests
    displayName: 'IE UT'
    continueOnError: false
  - script: $(BIN_DIR)/cpuUnitTests
    displayName: 'CPU UT'
    continueOnError: false
  - script: $(BIN_DIR)/vpuUnitTests
    displayName: 'VPU UT'
    continueOnError: false
  - script: $(BIN_DIR)/ieFuncTests
    displayName: 'IE FuncTests'
    continueOnError: false
  - script: $(BIN_DIR)/cpuFuncTests --gtest_print_time=1
    displayName: 'CPU FuncTests'
    continueOnError: false
  - script: $(BIN_DIR)/MklDnnBehaviorTests
    displayName: 'MklDnnBehaviorTests'
    continueOnError: false
  - script: |
      git clone https://github.com/openvinotoolkit/testdata.git
      git clone https://github.com/google/gtest-parallel.git
    workingDirectory: $(WORK_DIR)
    displayName: 'Clone testdata & gtest-parallel'
  - script: |
      export DATA_PATH=$(WORK_DIR)/testdata
      export MODELS_PATH=$(WORK_DIR)/testdata
      python3 $(WORK_DIR)/gtest-parallel/gtest-parallel $(BIN_DIR)/MklDnnFunctionalTests --workers=$(WORKERS_NUMBER) --print_test_times --dump_json_test_results=MklDnnFunctionalTests.json --gtest_filter=-smoke_MobileNet/ModelTransformationsTest.LPT/mobilenet_v2_tf_depthwise_batch1_inPluginDisabled_inTestDisabled_asymmetric* -- --gtest_print_time=1
    workingDirectory: $(WORK_DIR)
    displayName: 'MklDnnFunctionalTests'
    continueOnError: false
  - script: |
      export DATA_PATH=$(WORK_DIR)/testdata
      export MODELS_PATH=$(WORK_DIR)/testdata
      $(BIN_DIR)/InferenceEngineCAPITests
    displayName: 'IE CAPITests'
    continueOnError: false

- job: Win
  # About 150% of total time
  timeoutInMinutes: 120
  pool:
    name: WIN_VMSS_VENV_F8S_WU2
  variables:
    system.debug: true
    WORKERS_NUMBER: 8
    BUILD_TYPE: Release
    REPO_DIR: $(Build.Repository.LocalPath)
    WORK_DIR: $(Pipeline.Workspace)\_w
    BUILD_DIR: D:\build
    BIN_DIR: $(REPO_DIR)\bin\intel64
    MSVS_VARS_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
    MSVC_COMPILER_PATH: C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.24.28314\bin\Hostx64\x64\cl.exe
  steps:
  - checkout: self
    clean: true
    fetchDepth: 1
    lfs: false
    submodules: recursive
    path: openvino
  - script: |
      powershell -command "Invoke-RestMethod -Headers @{\"Metadata\"=\"true\"} -Method GET -Uri http://169.254.169.254/metadata/instance/compute?api-version=2019-06-01 | format-custom"
      where python3
      where python
      python --version
      wmic computersystem get TotalPhysicalMemory
      wmic cpu list
      wmic logicaldisk get description,name
      wmic VOLUME list
      set
    displayName: 'System properties'
  - script: |
      rd /Q /S $(WORK_DIR) & mkdir $(WORK_DIR)
      rd /Q /S $(BUILD_DIR) & mkdir $(BUILD_DIR)
    displayName: 'Make dir'
  - script: |
      certutil -urlcache -split -f https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-win.zip ninja-win.zip
      powershell -command "Expand-Archive -Force ninja-win.zip"
    workingDirectory: $(WORK_DIR)
    displayName: Install Ninja
  - script: |
      certutil -urlcache -split -f https://incredibuilddiag1wu2.blob.core.windows.net/incredibuild/IBSetupConsole_9_5_0.exe IBSetupConsole_9_5_0.exe
      call IBSetupConsole_9_5_0.exe /Install /Components=Agent,oneuse /Coordinator=11.1.0.4 /AGENT:OPENFIREWALL=ON /AGENT:AUTOSELECTPORTS=ON /ADDTOPATH=ON /AGENT:INSTALLADDINS=OFF
    workingDirectory: $(WORK_DIR)
    displayName: Install IncrediBuild
  - script: |
      echo Stop IncrediBuild_Agent && net stop IncrediBuild_Agent
      reg add HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Xoreax\IncrediBuild\Builder /f /v LastEnabled /d 0 && echo Start IncrediBuild_Agent && net start IncrediBuild_Agent
    displayName: Start IncrediBuild
  - script: |
      set PATH=$(WORK_DIR)\ninja-win;%PATH%
      call "$(MSVS_VARS_PATH)" && cmake -GNinja -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) -DENABLE_TESTS=ON -DCMAKE_C_COMPILER:PATH="$(MSVC_COMPILER_PATH)" -DCMAKE_CXX_COMPILER:PATH="$(MSVC_COMPILER_PATH)" $(REPO_DIR)
    workingDirectory: $(BUILD_DIR)
    displayName: 'CMake'
  - script: |
      set PATH=$(WORK_DIR)\ninja-win;%PATH%
      call "$(MSVS_VARS_PATH)" && "C:\Program Files (x86)\IncrediBuild\BuildConsole.exe" /COMMAND="ninja" /MaxCPUS=40
    workingDirectory: $(BUILD_DIR)
    displayName: 'Build Win'
  - script: echo Stop IncrediBuild_Agent && net stop IncrediBuild_Agent
    displayName: Stop IncrediBuild
    continueOnError: true
  - script: dir $(REPO_DIR)\bin\ /s /b
    displayName: 'List files'
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\unit-test --gtest_print_time=1 --gtest_filter=-backend_api.config_unsupported:*IE_GPU*
    displayName: 'nGraph UT'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\InferenceEngineUnitTests --gtest_print_time=1
    displayName: 'IE UT old'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\ieUnitTests
    displayName: 'IE UT'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\cpuUnitTests
    displayName: 'CPU UT'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\gnaUnitTests
    displayName: 'GNA UT'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\vpuUnitTests
    displayName: 'VPU UT'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\ieFuncTests
    displayName: 'IE FuncTests'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\cpuFuncTests --gtest_print_time=1
    displayName: 'CPU FuncTests'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;%PATH%
      $(BIN_DIR)\MklDnnBehaviorTests
    displayName: 'MklDnnBehaviorTests'
    continueOnError: false
  - script: |
      git clone https://github.com/openvinotoolkit/testdata.git
      git clone https://github.com/google/gtest-parallel.git
    workingDirectory: $(BUILD_DIR)
    displayName: 'Clone testdata & gtest-parallel'
    # Add for gtest-parallel, it hangs now (CVS-33386)
    #python $(BUILD_DIR)\gtest-parallel\gtest-parallel $(BIN_DIR)\MklDnnFunctionalTests --workers=$(WORKERS_NUMBER) --print_test_times --dump_json_test_results=MklDnnFunctionalTests.json -- --gtest_print_time=1
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;$(REPO_DIR)\inference-engine\temp\opencv_4.3.0\opencv\bin;%PATH%
      set DATA_PATH=$(BUILD_DIR)\testdata
      set MODELS_PATH=$(BUILD_DIR)\testdata
      $(BIN_DIR)\MklDnnFunctionalTests --gtest_print_time=1
    displayName: 'MklDnnFunctionalTests'
    continueOnError: false
  - script: |
      set PATH=$(REPO_DIR)\inference-engine\temp\tbb\bin;$(REPO_DIR)\inference-engine\temp\opencv_4.3.0\opencv\bin;%PATH%
      set DATA_PATH=$(BUILD_DIR)\testdata
      set MODELS_PATH=$(BUILD_DIR)\testdata
      $(BIN_DIR)\InferenceEngineCAPITests
    displayName: 'IE CAPITests'
    continueOnError: false
